( Compiler-Level Words Documentation )
( These words are implemented at the compiler level and cannot be redefined )

( STACK OPERATIONS - Compiler Level )
( DUP    ( a -- a a )           Duplicate top of stack )
( DROP   ( a -- )               Remove top of stack )
( SWAP   ( a b -- b a )         Exchange top two items )
( OVER   ( a b -- a b a )       Copy second item to top )
( ROT    ( a b c -- b c a )     Rotate top three items )

( ARITHMETIC OPERATIONS - Compiler Level )
( +      ( a b -- a+b )         Addition )
( -      ( a b -- a-b )         Subtraction )
( *      ( a b -- a*b )         Multiplication )
( /      ( a b -- a/b )         Division )
( MOD    ( a b -- a%b )         Modulo )
( NEGATE ( a -- -a )            Negate )

( COMPARISON OPERATIONS - Compiler Level )
( =      ( a b -- flag )        Equal )
( <>     ( a b -- flag )        Not equal )
( <      ( a b -- flag )        Less than )
( >      ( a b -- flag )        Greater than )
( <=     ( a b -- flag )        Less than or equal )
( >=     ( a b -- flag )        Greater than or equal )

( LOGICAL OPERATIONS - Compiler Level )
( AND    ( a b -- flag )        Logical AND )
( OR     ( a b -- flag )        Logical OR )
( NOT    ( a -- flag )          Logical NOT )

( I/O OPERATIONS - Compiler Level )
( .      ( a -- )               Print number )
( .S     ( -- )                 Print stack contents )
( EMIT   ( a -- )               Print character )
( KEY    ( -- a )               Read character )
( CR     ( -- )                 Print newline )
( TYPE   ( addr count -- )      Print string from stack )
( SPACE  ( -- )                 Print space character )
( BL     ( -- 32 )              Push space character code )

( CONTROL FLOW - Compiler Level )
( DO     ( limit start -- )     Begin definite loop )
( ?DO    ( limit start -- )     Begin conditional loop )
( LOOP   ( -- )                 End loop, increment counter )
( I      ( -- index )           Current loop index )
( J      ( -- index )           Outer loop index )
( IF     ( flag -- )            Begin conditional execution )
( ELSE   ( -- )                 Alternative branch )
( THEN   ( -- )                 End conditional )

( WORD DEFINITION - Compiler Level )
( :      ( -- )                 Begin word definition )
( ;      ( -- )                 End word definition )

( COMMENTS - Compiler Level )
( (      ( -- )                 Begin comment until ) )
( )      ( -- )                 End comment )

( STRING LITERALS - Compiler Level )
( "text" ( -- chars... count )  Push string characters and length )